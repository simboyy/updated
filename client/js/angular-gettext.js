angular.module('gettext',[]);angular.module('gettext').constant('gettext',function(str){return str;});angular.module('gettext').factory('gettextCatalog',["gettextPlurals","gettextFallbackLanguage","$http","$cacheFactory","$interpolate","$rootScope",function(gettextPlurals,gettextFallbackLanguage,$http,$cacheFactory,$interpolate,$rootScope){var catalog;var noContext='$$noContext';var test='<span id="test" title="test" class="tested">test</span>';var isHTMLModified=(angular.element('<span>'+test+'</span>').html()!==test);var prefixDebug=function(string){if(catalog.debug&&catalog.currentLanguage!==catalog.baseLanguage){return catalog.debugPrefix+string;}else{return string;}};var addTranslatedMarkers=function(string){if(catalog.showTranslatedMarkers){return catalog.translatedMarkerPrefix+string+catalog.translatedMarkerSuffix;}else{return string;}};function broadcastUpdated(){$rootScope.$broadcast('gettextLanguageChanged');}catalog={debug:false,debugPrefix:'[MISSING]: ',showTranslatedMarkers:false,translatedMarkerPrefix:'[',translatedMarkerSuffix:']',strings:{},baseLanguage:'en',currentLanguage:'en',cache:$cacheFactory('strings'),setCurrentLanguage:function(lang){this.currentLanguage=lang;broadcastUpdated();},getCurrentLanguage:function(){return this.currentLanguage;},setStrings:function(language,strings){if(!this.strings[language]){this.strings[language]={};}var defaultPlural=gettextPlurals(language,1);for(var key in strings){var val=strings[key];if(isHTMLModified){key=angular.element('<span>'+key+'</span>').html();}if(angular.isString(val)||angular.isArray(val)){var obj={};obj[noContext]=val;val=obj;}if(!this.strings[language][key]){this.strings[language][key]={};}for(var context in val){var str=val[context];if(!angular.isArray(str)){this.strings[language][key][context]=[];this.strings[language][key][context][defaultPlural]=str;}else{this.strings[language][key][context]=str;}}}broadcastUpdated();},getStringFormFor:function(language,string,n,context){if(!language){return null;}var stringTable=this.strings[language]||{};var contexts=stringTable[string]||{};var plurals=contexts[context||noContext]||[];return plurals[gettextPlurals(language,n)];},getString:function(string,scope,context){var fallbackLanguage=gettextFallbackLanguage(this.currentLanguage);string=this.getStringFormFor(this.currentLanguage,string,1,context)||this.getStringFormFor(fallbackLanguage,string,1,context)||prefixDebug(string);string=scope?$interpolate(string)(scope):string;return addTranslatedMarkers(string);},getPlural:function(n,string,stringPlural,scope,context){var fallbackLanguage=gettextFallbackLanguage(this.currentLanguage);string=this.getStringFormFor(this.currentLanguage,string,n,context)||this.getStringFormFor(fallbackLanguage,string,n,context)||prefixDebug(n===1?string:stringPlural);if(scope){scope.$count=n;string=$interpolate(string)(scope);}return addTranslatedMarkers(string);},loadRemote:function(url){return $http({method:'GET',url:url,cache:catalog.cache}).then(function(response){var data=response.data;for(var lang in data){catalog.setStrings(lang,data[lang]);}return response;});}};return catalog;}]);angular.module('gettext').directive('translate',["gettextCatalog","$parse","$animate","$compile","$window","gettextUtil",function(gettextCatalog,$parse,$animate,$compile,$window,gettextUtil){var msie=parseInt((/msie (\d+)/.exec(angular.lowercase($window.navigator.userAgent))||[])[1],10);var PARAMS_PREFIX='translateParams';function getCtxAttr(key){return gettextUtil.lcFirst(key.replace(PARAMS_PREFIX,''));}function handleInterpolationContext(scope,attrs,update){var attributes=Object.keys(attrs).filter(function(key){return gettextUtil.startsWith(key,PARAMS_PREFIX)&&key!==PARAMS_PREFIX;});if(!attributes.length){return null;}var interpolationContext=angular.extend({},scope);var unwatchers=[];attributes.forEach(function(attribute){var unwatch=scope.$watch(attrs[attribute],function(newVal){var key=getCtxAttr(attribute);interpolationContext[key]=newVal;update(interpolationContext);});unwatchers.push(unwatch);});scope.$on('$destroy',function(){unwatchers.forEach(function(unwatch){unwatch();});});return interpolationContext;}return{restrict:'AE',terminal:true,compile:function compile(element,attrs){gettextUtil.assert(!attrs.translatePlural||attrs.translateN,'translate-n','translate-plural');gettextUtil.assert(!attrs.translateN||attrs.translatePlural,'translate-plural','translate-n');var msgid=gettextUtil.trim(element.html());var translatePlural=attrs.translatePlural;var translateContext=attrs.translateContext;if(msie<=8){if(msgid.slice(-13)==='<!--IE fix-->'){msgid=msgid.slice(0,-13);}}return{post:function(scope,element,attrs){var countFn=$parse(attrs.translateN);var pluralScope=null;var linking=true;function update(interpolationContext){interpolationContext=interpolationContext||null;var translated;if(translatePlural){scope=pluralScope||(pluralScope=scope.$new());scope.$count=countFn(scope);translated=gettextCatalog.getPlural(scope.$count,msgid,translatePlural,interpolationContext,translateContext);}else{translated=gettextCatalog.getString(msgid,interpolationContext,translateContext);}var oldContents=element.contents();if(oldContents.length===0){return;}if(translated===gettextUtil.trim(oldContents.html())){if(linking){$compile(oldContents)(scope);}return;}var newWrapper=angular.element('<span>'+translated+'</span>');$compile(newWrapper.contents())(scope);var newContents=newWrapper.contents();$animate.enter(newContents,element);$animate.leave(oldContents);}var interpolationContext=handleInterpolationContext(scope,attrs,update);update(interpolationContext);linking=false;if(attrs.translateN){scope.$watch(attrs.translateN,function(){update(interpolationContext);});}scope.$on('gettextLanguageChanged',function(){update(interpolationContext);});}};}};}]);angular.module("gettext").factory("gettextFallbackLanguage",function(){var cache={};var pattern=/([^_]+)_[^_]+$/;return function(langCode){if(cache[langCode]){return cache[langCode];}var matches=pattern.exec(langCode);if(matches){cache[langCode]=matches[1];return matches[1];}return null;};});angular.module('gettext').filter('translate',["gettextCatalog",function(gettextCatalog){function filter(input,context){return gettextCatalog.getString(input,null,context);}filter.$stateful=true;return filter;}]);angular.module("gettext").factory("gettextPlurals",function(){var languageCodes={"pt_BR":"pt_BR","pt-BR":"pt_BR"};return function(langCode,n){switch(getLanguageCode(langCode)){case"ay":case"bo":case"cgg":case"dz":case"fa":case"id":case"ja":case"jbo":case"ka":case"kk":case"km":case"ko":case"ky":case"lo":case"ms":case"my":case"sah":case"su":case"th":case"tt":case"ug":case"vi":case"wo":case"zh":return 0;case"is":return(n%10!=1||n%100==11)?1:0;case"jv":return n!=0?1:0;case"mk":return n==1||n%10==1?0:1;case"ach":case"ak":case"am":case"arn":case"br":case"fil":case"fr":case"gun":case"ln":case"mfe":case"mg":case"mi":case"oc":case"pt_BR":case"tg":case"ti":case"tr":case"uz":case"wa":case"zh":return n>1?1:0;case"lv":return(n%10==1&&n%100!=11?0:n!=0?1:2);case"lt":return(n%10==1&&n%100!=11?0:n%10>=2&&(n%100<10||n%100>=20)?1:2);case"be":case"bs":case"hr":case"ru":case"sr":case"uk":return(n%10==1&&n%100!=11?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2);case"mnk":return(n==0?0:n==1?1:2);case"ro":return(n==1?0:(n==0||(n%100>0&&n%100<20))?1:2);case"pl":return(n==1?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2);case"cs":case"sk":return(n==1)?0:(n>=2&&n<=4)?1:2;case"sl":return(n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0);case"mt":return(n==1?0:n==0||(n%100>1&&n%100<11)?1:(n%100>10&&n%100<20)?2:3);case"gd":return(n==1||n==11)?0:(n==2||n==12)?1:(n>2&&n<20)?2:3;case"cy":return(n==1)?0:(n==2)?1:(n!=8&&n!=11)?2:3;case"kw":return(n==1)?0:(n==2)?1:(n==3)?2:3;case"ga":return n==1?0:n==2?1:n<7?2:n<11?3:4;case"ar":return(n==0?0:n==1?1:n==2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5);default:return n!=1?1:0;}};function getLanguageCode(langCode){if(!languageCodes[langCode]){languageCodes[langCode]=langCode.split(/\-|_/).shift();}return languageCodes[langCode];}});angular.module('gettext').factory('gettextUtil',function gettextUtil(){var trim=(function(){if(!String.prototype.trim){return function(value){return(typeof value==='string')?value.replace(/^\s*/,'').replace(/\s*$/,''):value;};}return function(value){return(typeof value==='string')?value.trim():value;};})();function assert(condition,missing,found){if(!condition){throw new Error('You should add a '+missing+' attribute whenever you add a '+found+' attribute.');}}function startsWith(target,query){return target.indexOf(query)===0;}function lcFirst(target){var first=target.charAt(0).toLowerCase();return first+target.substr(1);}return{trim:trim,assert:assert,startsWith:startsWith,lcFirst:lcFirst};});