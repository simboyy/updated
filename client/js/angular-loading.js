(function(root,factory){if(typeof define=='function'&&define.amd)define(['angular','spinjs'],factory)
else factory(window.angular,window.Spinner)}(this,function(angular,Spinner){'use strict';angular.module('darthwade.dwLoading',[]).value('dwLoadingOptions',{active:false,text:'Loading...',className:'',overlay:true,spinner:true,spinnerOptions:{lines:12,length:7,width:4,radius:10,rotate:0,corners:1,color:'#000',direction:1,speed:2,trail:100,opacity:1/4,fps:20,zIndex:2e9,className:'dw-spinner',top:'auto',left:'auto',position:'relative'}}).service('dwLoading',['$timeout','$rootScope','dwLoadingOptions',function($timeout,$rootScope,dwLoadingOptions){var self=this;self.setDefaultOptions=function(options){extend(true,dwLoadingOptions,options);};self.start=function(key){$timeout(function(){$rootScope.$broadcast('$dwLoadingStart',key);});};self.finish=function(key){$timeout(function(){$rootScope.$broadcast('$dwLoadingFinish',key);});};}]).factory('$loading',['dwLoading',function(dwLoading){return dwLoading;}]).directive('dwLoading',['$rootScope','dwLoadingOptions',function($rootScope,dwLoadingOptions){return{link:function(scope,element,attrs){var spinner=null,key=attrs.dwLoading||false,options,container,body,spinnerContainer,text;var start=function(){if(container){container.addClass('dw-loading-active');}if(spinner){spinner.spin(spinnerContainer[0]);}};var finish=function(){if(container){container.removeClass('dw-loading-active');}if(spinner){spinner.stop();}};scope.$watch(attrs.dwLoadingOptions,function(newOptions){finish();options=extend(true,{},dwLoadingOptions,newOptions);body=angular.element('<div></div>').addClass('dw-loading-body');container=angular.element('<div></div>').addClass('dw-loading').append(body);if(options.overlay){container.addClass('dw-loading-overlay');}if(options.className){container.addClass(options.className);}if(options.spinner){spinnerContainer=angular.element('<div></div>').addClass('dw-loading-spinner');body.append(spinnerContainer);spinner=new Spinner(options.spinnerOptions);}if(options.text){text=angular.element('<div></div>').addClass('dw-loading-text').text(options.text);body.append(text);}element.append(container);if(options.active||!key){start();}},true);$rootScope.$on('$dwLoadingStart',function(event,loadKey){if(loadKey===key){start();}});$rootScope.$on('$dwLoadingFinish',function(event,loadKey){if(loadKey===key){finish();}});scope.$on('$destroy',function(){finish();spinner=null;});}};}]);function extend(dst){var deep=false,i=1;if(typeof dst==='boolean'){deep=dst;dst=arguments[1]||{};i++;}angular.forEach([].slice.call(arguments,i),function(obj){var array,clone,copy,key,src;for(key in obj){src=dst[key];copy=obj[key];if(dst===copy){continue;}if(deep&&copy&&(angular.isObject(copy)||(array=angular.isArray(copy)))){if(array){clone=(src&&angular.isArray(src))?src:[];}else{clone=(src&&angular.isObject(src))?src:{};}dst[key]=extend(deep,clone,copy);}else if(copy!==undefined){dst[key]=copy;}}});return dst;}}));