{"version":3,"sources":["api/product/product.controller.js"],"names":["index","show","create","update","destroy","async","require","isJson","str","JSON","parse","e","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","exports","count","req","query","q","where","find","exec","priceRange","findOne","sort","doc","min","max","variants","price","skip","parseInt","limit","select","p","products","catch","findById","params","id","populate","path","body","uid","user","email","now","Date","updated_at","created_at","name","nameLower","toString","toLowerCase","slug","replace","_id","$pull","multi","removeConnectionsCB","obj","category","$addToSet"],"mappings":"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","file":"product.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/products              ->  index\n * POST    /api/products              ->  create\n * GET     /api/products/:id          ->  show\n * PUT     /api/products/:id          ->  update\n * DELETE  /api/products/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Product from './product.model';\nimport Category from '../category/category.model';\n        var async = require(\"async\");\n\nfunction isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    \n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.extend(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Get all features group\nexports.count = function(req, res) {\n  if(req.query){\n    var q = isJson(req.query.where);\n    Product.find(q).count().exec(function (err, count) {\n      if(err) { return handleError(res, err); }\n      return res.status(200).json([{count:count}]);\n    });\n  }\n};\n\nexports.priceRange = function(req, res) {\n    var q = isJson(req.query.where);\n    Product.findOne({ }).sort('-variants.price').exec().then(function(doc,err) {\n        return res.status(200).json({min:0,max:doc.variants[0].price});\n    });\n    // Product.aggregate(\n    //     {$match: q},\n    //     {$project:{\"variants.price\":1}},\n    //     {$unwind:\"$variants\"},\n    //     {$sort:{\"variants.price\":-1}},\n    //     // {$limit:1},\n    //     function (err,data) {\n    //       // console.log('xxxxxxxxxxx',err,data);\n    //       if(err) { return handleError(res, err); }\n    //       if(data.length>0){\n    //         if(!data[data.length-1].variants.price) data[data.length-1].variants.price = 0; // If price blank for last record\n    //         return res.status(200).json({min:data[data.length-1].variants.price,max:data[0].variants.price});\n    //       }else{\n    //         return res.status(200).json({min:0,max:10000});\n    //       }\n    //     }\n    // );\n};\n\n// Gets a list of Products\nexport function index(req, res) {\n  if(req.query){\n    var q = isJson(req.query.where);\n    var sort = isJson(req.query.sort);\n    req.query.skip = parseInt(req.query.skip);\n    req.query.limit = parseInt(req.query.limit);\n    var select = isJson(req.query.select);\n      \n        var p = [];\n        Product.find(q).limit(req.query.limit).skip(req.query.skip).sort(sort).select(select).exec(function (err, products) {\n          if(err) { return handleError(res, err); }\n          return res.status(200).json(products);\n      }); \n  }else{\n  return Product.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n  }\n}\n\n// Gets a single Product from the DB\nexport function show(req, res) {\n  return Product.findById(req.params.id).populate({path: 'brand'}).populate({path: 'category'}).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Product in the DB\nexport function create(req, res) {\n  req.body.uid = req.user.email; // id change on every login hence email is used\n  var now = Date.now();\n  req.body.updated = now;\n  req.body.updated_at = now;\n  req.body.created_at = now;\n  if(req.body.name)\n    req.body.nameLower = req.body.name.toString().toLowerCase();\n  if(!req.body.slug && req.body.name)\n    req.body.slug = req.body.name.toString().toLowerCase()\n                      .replace(/\\s+/g, '-')        // Replace spaces with -\n                      .replace(/[^\\w\\-]+/g, '')   // Remove all non-word chars\n                      .replace(/\\-\\-+/g, '-')      // Replace multiple - with single -\n                      .replace(/^-+/, '')          // Trim - from start of text\n                      .replace(/-+$/, '');\n  return Product.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Product in the DB\nexport function update(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  var now = Date.now();\n  req.body.updated = now;\n  req.body.updated_at = now;\n  if ( !req.body.uid ) \n    req.body.uid = req.user.email;\n  \n  if(req.body.name)\n    req.body.nameLower = req.body.name.toString().toLowerCase();\n  \n  // Just to enable checking if the category has any product\n  Category.update( \n      {  },\n      { $pull: { products : { _id : req.params.id } } },\n      { multi: true },\n      function removeConnectionsCB(err, obj) {\n        if(req.body.category){\n          // console.log(err,obj)\n          Category.update(\n            { _id: req.body.category }, // Find the category from category model\n            { $addToSet: {'products':{'_id': req.params.id}}}, // Update the prduct id into category model\n            function removeConnectionsCB(err, obj) {\n              // console.log(err,obj)\n            }\n          )\n        }\n      }\n  )\n\n  return Product.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res))\n}\n\n// Deletes a Product from the DB\nexport function destroy(req, res) {\n  return Product.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}